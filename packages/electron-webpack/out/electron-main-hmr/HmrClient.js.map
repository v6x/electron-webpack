{"version":3,"sources":["../../src/electron-main-hmr/HmrClient.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAM,KAAK,GAAG,OAAO,CAAC,OAAD,CAAP,CAAiB,kCAAjB,CAAd;;AAMM,MAAO,SAAP,CAAgB;AAKpB,EAAA,WAAA,CAAY,UAAZ,EAAwC,GAAxC,EAAsF,iBAAtF,EAAqH;AAA7E,SAAA,GAAA,GAAA,GAAA;AAA8C,SAAA,iBAAA,GAAA,iBAAA;AAJtF,SAAA,QAAA,GAA0B,IAA1B;AAEiB,SAAA,GAAA,GAAM,KAAI,kBAAJ,GAAN;;AAGf,QAAI,GAAG,IAAI,IAAX,EAAiB;AACf,YAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,SAAK,GAAL,CAAS,OAAT,CAAiB;AAAC,MAAA,IAAI,EAAE;AAAP,KAAjB,EAAqC,KAAK,IAAG;AAC3C,UAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,QAAA,OAAO,CAAC,KAAR,CAAc,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,QAAN,EAA7B;AACD;;AACD,UAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,QAAA,KAAK,CAAC,wBAAwB,UAAU,GAAnC,CAAL;AACD;AACF,KAPD;AASA,SAAK,GAAL,CAAS,EAAT,CAAmB,OAAnB,EAA4B,KAAK,IAAG;AAClC,MAAA,OAAO,CAAC,KAAR,CAAc,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,QAAN,EAA7B;AACD,KAFD;AAIA,SAAK,GAAL,CAAS,EAAT,CAA0B,QAA1B,EAAoC,IAAI,IAAG;AACzC,WAAK,QAAL,GAAgB,IAAI,CAAC,IAArB;;AACA,UAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,YAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,UAAA,KAAK,CAAC,oBAAoB,IAAI,CAAC,IAAI,EAA9B,CAAL;AACD;;AACD;AACD;;AAED,YAAM,MAAM,GAAG,GAAG,CAAC,MAAJ,EAAf;;AACA,UAAI,MAAM,KAAK,MAAf,EAAuB;AACrB,aAAK,KAAL;AACD,OAFD,MAGK,IAAI,MAAM,KAAK,OAAX,IAAsB,MAAM,KAAK,MAArC,EAA6C;AAChD,QAAA,OAAO,CAAC,IAAR,CAAa,kDAAkD,MAAM,+BAArE;AACD,OAFI,MAGA,IAAI,KAAK,CAAC,OAAV,EAAmB;AACtB,QAAA,KAAK,CAAC,gCAAgC,MAAM,EAAvC,CAAL;AACD;AACF,KAnBD;AAoBD;;AAEO,EAAA,UAAU,GAAA;AAChB,WAAO,KAAK,QAAL,KAAkB,KAAK,iBAAL,EAAzB;AACD;;AAEO,EAAA,KAAK,GAAA;AACX,SAAK,GAAL,CAAS,KAAT,CAAe,IAAf,EACG,IADH,CACQ,eAAe,IAAG;AACtB,UAAI,eAAe,IAAI,IAAvB,EAA6B;AAC3B,QAAA,OAAO,CAAC,IAAR,CAAa,qDAAb;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,+DAAb;AACA;AACD;;AAED,MAAA,OAAO,CAAC,8BAAD,CAAP,CAAwC,eAAxC,EAAyD,eAAzD;;AAEA,UAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,QAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ;AACD;AACF,KAbH,EAcG,KAdH,CAcS,KAAK,IAAG;AACb,YAAM,MAAM,GAAG,KAAK,GAAL,CAAS,MAAT,EAAf;;AACA,UAAI,MAAM,KAAK,OAAX,IAAsB,MAAM,KAAK,MAArC,EAA6C;AAC3C,QAAA,OAAO,CAAC,IAAR,CAAa,SAAS,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,QAAN,EAAgB,EAArD;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,qFAAb;;AACA,QAAA,OAAO,CAAC,UAAD,CAAP,CAAoB,GAApB,CAAwB,IAAxB,CAA6B,GAA7B;AACD,OAJD,MAKK;AACH,QAAA,OAAO,CAAC,IAAR,CAAa,wBAAwB,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,OAAO,EAAjE;AACD;AACF,KAxBH;AAyBD;;AA3EmB,C","sourcesContent":["import Crocket from \"crocket\"\n\nconst debug = require(\"debug\")(\"electron-webpack:main-client-hmr\")\n\ninterface BuiltMessage {\n  hash: string\n}\n\nexport class HmrClient {\n  lastHash: string | null = null\n\n  private readonly ipc = new Crocket()\n\n  constructor(socketPath: string, private hot: __WebpackModuleApi.Hot, private readonly currentHashGetter: () => string) {\n    if (hot == null) {\n      throw new Error(`[HMR] Hot Module Replacement is disabled.`)\n    }\n\n    this.ipc.connect({path: socketPath}, error => {\n      if (error != null) {\n        console.error(error.stack || error.toString())\n      }\n      if (debug.enabled) {\n        debug(`Connected to server (${socketPath})`)\n      }\n    })\n\n    this.ipc.on<Error>(\"error\", error => {\n      console.error(error.stack || error.toString())\n    })\n\n    this.ipc.on<BuiltMessage>(\"/built\", data => {\n      this.lastHash = data.hash\n      if (this.isUpToDate()) {\n        if (debug.enabled) {\n          debug(`Up to date, hash ${data.hash}`)\n        }\n        return\n      }\n\n      const status = hot.status()\n      if (status === \"idle\") {\n        this.check()\n      }\n      else if (status === \"abort\" || status === \"fail\") {\n        console.warn(`[HMR] Cannot apply update as a previous update ${status}ed. Need to do a full reload!`)\n      }\n      else if (debug.enabled) {\n        debug(`Cannot check changes, status ${status}`)\n      }\n    })\n  }\n\n  private isUpToDate() {\n    return this.lastHash === this.currentHashGetter()\n  }\n\n  private check() {\n    this.hot.check(true)\n      .then(outdatedModules => {\n        if (outdatedModules == null) {\n          console.warn(`[HMR] Cannot find update. Need to do a full reload!`)\n          console.warn(`[HMR] (Probably because of restarting the webpack-dev-server)`)\n          return\n        }\n\n        require(\"webpack/hot/log-apply-result\")(outdatedModules, outdatedModules)\n\n        if (this.isUpToDate()) {\n          console.log(`[HMR] App is up to date.`)\n        }\n      })\n      .catch(error => {\n        const status = this.hot.status()\n        if (status === \"abort\" || status === \"fail\") {\n          console.warn(`[HMR] ${error.stack || error.toString()}`)\n          console.warn(\"[HMR] Cannot apply update. Need to do a full reload - application will be restarted\")\n          require(\"electron\").app.exit(100)\n        }\n        else {\n          console.warn(`[HMR] Update failed: ${error.stack || error.message}`)\n        }\n      })\n  }\n}"],"sourceRoot":""}
