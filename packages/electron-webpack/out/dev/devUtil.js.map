{"version":3,"sources":["../../src/dev/devUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\nimport { ChildProcess } from \"child_process\"\n\nexport interface LineFilter {\n  filter(line: string): boolean\n}\n\nfunction filterText(s: string, lineFilter: LineFilter | null) {\n  const lines = s\n    .trim()\n    .split(/\\r?\\n/)\n    .filter(it => {\n      if (lineFilter != null && !lineFilter.filter(it)) {\n        return false\n      }\n\n      // https://github.com/electron/electron/issues/4420\n      // this warning can be safely ignored\n      if (it.includes(\"Couldn't set selectedTextBackgroundColor from default ()\")) {\n        return false\n      }\n      if (it.includes(\"Use NSWindow's -titlebarAppearsTransparent=YES instead.\")) {\n        return false\n      }\n      return !it.includes(\"Warning: This is an experimental feature and could change at any time.\")\n        && !it.includes(\"No type errors found\")\n        && !it.includes(\"webpack: Compiled successfully.\")\n    })\n\n  if (lines.length === 0) {\n    return null\n  }\n  return \"  \" + lines.join(`\\n  `) + \"\\n\"\n}\n\nexport function logProcessErrorOutput(label: \"Electron\" | \"Renderer\" | \"Main\", childProcess: ChildProcess) {\n  childProcess.stderr.on(\"data\", data => {\n    logProcess(label, data.toString(), chalk.red)\n  })\n}\n\nexport function logError(label: \"Electron\" | \"Renderer\" | \"Main\", error: Error) {\n  logProcess(label, error.stack || error.toString(), chalk.red)\n}\n\nconst LABEL_LENGTH = 28\n\nexport function logProcess(label: \"Electron\" | \"Renderer\" | \"Main\", data: string | Buffer, labelColor: any, lineFilter: LineFilter | null = null) {\n  const log = filterText(data.toString(), lineFilter)\n  if (log == null || log.length === 0) {\n    return\n  }\n\n  process.stdout.write(\n    labelColor.bold(`┏ ${label} ${\"-\".repeat(LABEL_LENGTH - label.length - 1)}`) +\n    \"\\n\\n\" + log + \"\\n\" +\n    labelColor.bold(`┗ ${\"-\".repeat(LABEL_LENGTH)}`) +\n    \"\\n\"\n  )\n}\n\nexport class DelayedFunction {\n  private readonly executor: () => void\n  private handle: NodeJS.Timer | null = null\n\n  constructor(executor: () => void) {\n    this.executor = () => {\n      this.handle = null\n      executor()\n    }\n  }\n\n  schedule() {\n    this.cancel()\n    this.handle = setTimeout(this.executor, 5000)\n  }\n\n  cancel() {\n    const handle = this.handle\n    if (handle != null) {\n      this.handle = null\n      clearTimeout(handle)\n    }\n  }\n}\n\nexport function getCommonEnv() {\n  return {\n    ...process.env,\n    NODE_ENV: \"development\",\n    // to force debug colors in the child process\n    DEBUG_COLORS: true,\n    DEBUG_FD: \"1\",\n  }\n}"],"sourceRoot":""}
