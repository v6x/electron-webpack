{"version":3,"sources":["../../src/configurators/js.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGM,SAAU,iBAAV,CAA4B,YAA5B,EAA6D;AACjE;AACA,QAAM,OAAO,GAAG,CACd,CACE,OAAO,CAAC,mBAAD,CAAP,CAA6B,OAD/B,EACwC;AACtC,IAAA,OAAO,EAAE,KAD6B;AAEtC,IAAA,OAAO,EAAE,qBAAqB,CAAC,YAAY,CAAC,UAAd,EAA0B,YAAY,CAAC,eAAvC;AAFQ,GADxC,CADc,CAAhB;AAOA,QAAM,OAAO,GAAG,CACd,OAAO,CAAC,qCAAD,CAAP,CAA+C,OADjC,CAAhB;;AAIA,MAAI,YAAY,CAAC,IAAb,KAAsB,MAAtB,IAAgC,YAAY,CAAC,aAAb,CAA2B,YAA3B,CAApC,EAA8E;AAC5E,IAAA,OAAO,CAAC,IAAR,CAAa,CAAC,OAAO,CAAC,wBAAD,CAAR,EAAoC;AAC/C,MAAA,WAAW,EAAE,YADkC;AAE/C,MAAA,gBAAgB,EAAE;AAF6B,KAApC,CAAb;AAID;;AAED,EAAA,YAAY,CAAC,OAAD,EAAU,YAAY,CAAC,0BAAb,CAAwC;AAC5D,IAAA,QAAQ,EAAE,CAAC,eAAD,EAAkB,gBAAlB,CADkD;AAE5D,IAAA,QAAQ,EAAE,CAAC,kBAAD,EAAqB,mBAArB;AAFkD,GAAxC,CAAV,CAAZ;AAIA,EAAA,YAAY,CAAC,OAAD,EAAU,YAAY,CAAC,0BAAb,CAAwC;AAC5D,IAAA,QAAQ,EAAE,CAAC,eAAD,EAAkB,gBAAlB,CADkD;AAE5D,IAAA,QAAQ,EAAE,CAAC,oCAAD,EAAuC,qCAAvC;AAFkD,GAAxC,CAAV,CAAZ;AAKA,SAAO;AACL,IAAA,MAAM,EAAE,cADH;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,OADO;AAEP,MAAA;AAFO;AAFJ,GAAP;AAOD;;AAED,SAAS,YAAT,CAAsB,EAAtB,EAAsC,KAAtC,EAA0D;AACxD,OAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACxB,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,CAAtB;;AACA,IAAA,EAAE,CAAC,IAAH,CAAQ,CAAC,MAAM,CAAC,OAAP,IAAkB,MAAnB,CAAR;AACD;AACF;;AAED,SAAS,qBAAT,CAA+B,UAA/B,EAAoD,eAApD,EAA2E;AACzE,MAAI,UAAJ,EAAgB;AACd,WAAO;AACL,MAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,MAAI,WAAW,GAAG,OAAlB;;AACA,MAAI,mBAAI,eAAJ,EAAqB,OAArB,CAAJ,EAAmC;AACjC,IAAA,WAAW,GAAG,QAAd;AACD,GAFD,MAGK,IAAI,mBAAI,eAAJ,EAAqB,OAArB,CAAJ,EAAmC;AACtC,IAAA,WAAW,GAAG,OAAd;AACD,GAFI,MAGA,IAAI,mBAAI,eAAJ,EAAqB,OAArB,CAAJ,EAAmC;AACtC,IAAA,WAAW,GAAG,OAAd;AACD,GAFI,MAGA,IAAI,mBAAI,eAAJ,EAAqB,OAArB,CAAJ,EAAmC;AACtC,IAAA,WAAW,GAAG,OAAd;AACD;;AAED,SAAO;AACL,IAAA,IAAI,EAAE;AADD,GAAP;AAGD,C","sourcesContent":["import { gte } from \"semver\"\nimport { WebpackConfigurator } from \"../main\"\n\nexport function createBabelLoader(configurator: WebpackConfigurator) {\n  // better to use require instead of just preset name to avoid babel resolving (in our test we set custom resolver - and only in case of explicit required it works)\n  const presets = [\n    [\n      require(\"@babel/preset-env\").default, {\n      modules: false,\n      targets: computeBabelEnvTarget(configurator.isRenderer, configurator.electronVersion),\n    }],\n  ]\n  const plugins = [\n    require(\"@babel/plugin-syntax-dynamic-import\").default,\n  ]\n\n  if (configurator.type !== \"main\" && configurator.hasDependency(\"element-ui\")) {\n    plugins.push([require(\"babel-plugin-component\"), {\n      libraryName: \"element-ui\",\n      styleLibraryName: \"theme-chalk\"\n    }])\n  }\n\n  addBabelItem(presets, configurator.getMatchingDevDependencies({\n    includes: [\"babel-preset-\", \"@babel/preset-\"],\n    excludes: [\"babel-preset-env\", \"@babel/preset-env\"],\n  }))\n  addBabelItem(plugins, configurator.getMatchingDevDependencies({\n    includes: [\"babel-plugin-\", \"@babel/plugin-\"],\n    excludes: [\"babel-plugin-syntax-dynamic-import\", \"@babel/plugin-syntax-dynamic-import\"],\n  }))\n\n  return {\n    loader: \"babel-loader\",\n    options: {\n      presets,\n      plugins\n    }\n  }\n}\n\nfunction addBabelItem(to: Array<any>, names: Array<string>) {\n  for (const name of names) {\n    const module = require(name)\n    to.push([module.default || module])\n  }\n}\n\nfunction computeBabelEnvTarget(isRenderer: boolean, electronVersion: string) {\n  if (isRenderer) {\n    return {\n      electron: electronVersion\n    }\n  }\n\n  let nodeVersion = \"7.4.0\"\n  if (gte(electronVersion, \"3.0.0\")) {\n    nodeVersion = \"10.2.0\"\n  }\n  else if (gte(electronVersion, \"2.0.0\")) {\n    nodeVersion = \"8.9.3\"\n  }\n  else if (gte(electronVersion, \"1.8.2\")) {\n    nodeVersion = \"8.2.1\"\n  }\n  else if (gte(electronVersion, \"1.7.3\")) {\n    nodeVersion = \"7.9.0\"\n  }\n\n  return {\n    node: nodeVersion\n  }\n}\n"],"sourceRoot":""}
